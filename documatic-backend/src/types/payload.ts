/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    tenants: Tenant;
    organizations: Organization;
    teams: Team;
    users: User;
    contacts: Contact;
    vendors: Vendor;
    inventories: Inventory;
    locations: Location;
    assets: Asset;
    sensors: Sensor;
    'asset-statuses': AssetStatus;
    'service-channels': ServiceChannel;
    'service-requests': ServiceRequest;
    'work-orders': WorkOrder;
    'system-events': SystemEvent;
    comments: Comment;
    uploads: Upload;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    teams: {
      workOrders: 'work-orders';
    };
    contacts: {
      vendors: 'vendors';
    };
    vendors: {
      assets: 'assets';
      inventories: 'inventories';
      workOrders: 'work-orders';
    };
    inventories: {
      assets: 'assets';
      workOrders: 'inventories';
    };
    locations: {
      inventories: 'inventories';
      workOrders: 'work-orders';
    };
    assets: {
      workOrders: 'work-orders';
      sensors: 'sensors';
    };
    'service-requests': {
      workOrder: 'work-orders';
    };
  };
  collectionsSelect: {
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    organizations: OrganizationsSelect<false> | OrganizationsSelect<true>;
    teams: TeamsSelect<false> | TeamsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    contacts: ContactsSelect<false> | ContactsSelect<true>;
    vendors: VendorsSelect<false> | VendorsSelect<true>;
    inventories: InventoriesSelect<false> | InventoriesSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    assets: AssetsSelect<false> | AssetsSelect<true>;
    sensors: SensorsSelect<false> | SensorsSelect<true>;
    'asset-statuses': AssetStatusesSelect<false> | AssetStatusesSelect<true>;
    'service-channels': ServiceChannelsSelect<false> | ServiceChannelsSelect<true>;
    'service-requests': ServiceRequestsSelect<false> | ServiceRequestsSelect<true>;
    'work-orders': WorkOrdersSelect<false> | WorkOrdersSelect<true>;
    'system-events': SystemEventsSelect<false> | SystemEventsSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    uploads: UploadsSelect<false> | UploadsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  logo?: string | null;
  settings?: {
    timezone?:
      | (
          | 'UTC'
          | 'Pacific/Honolulu'
          | 'America/Los_Angeles'
          | 'America/Denver'
          | 'America/Phoenix'
          | 'America/Chicago'
          | 'America/Mexico_City'
          | 'America/New_York'
          | 'America/Bogota'
          | 'America/Halifax'
          | 'America/Santiago'
          | 'America/Sao_Paulo'
          | 'America/Argentina/Buenos_Aires'
          | 'Europe/London'
          | 'Europe/Paris'
          | 'Europe/Amsterdam'
          | 'Europe/Madrid'
          | 'Europe/Helsinki'
          | 'Europe/Athens'
          | 'Africa/Cairo'
          | 'Asia/Jerusalem'
          | 'Europe/Moscow'
          | 'Europe/Istanbul'
          | 'Africa/Johannesburg'
          | 'Asia/Tehran'
          | 'Asia/Dubai'
          | 'Asia/Kolkata'
          | 'Asia/Kathmandu'
          | 'Asia/Dhaka'
          | 'Asia/Bangkok'
          | 'Asia/Singapore'
          | 'Asia/Hong_Kong'
          | 'Asia/Shanghai'
          | 'Asia/Taipei'
          | 'Asia/Tokyo'
          | 'Asia/Seoul'
          | 'Australia/Adelaide'
          | 'Australia/Sydney'
          | 'Australia/Brisbane'
          | 'Pacific/Auckland'
        )
      | null;
    language?: ('en' | 'es') | null;
    workingDays?: ('mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat' | 'sun')[] | null;
    dateFormat?:
      | (
          | 'dd/MM/yyyy'
          | 'yyyy-MM-dd'
          | 'MMMM d, yyyy'
          | "d 'of' MMMM, yyyy"
          | 'MMM d, yyyy'
          | 'EEEE, MMMM d, yyyy'
          | 'EEE, MMM d, yyyy'
          | 'd MMMM yyyy'
          | 'd MMM yyyy'
        )
      | null;
    timeFormat?: ('h:mm a' | 'HH:mm') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organizations".
 */
export interface Organization {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teams".
 */
export interface Team {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  users?: (number | User)[] | null;
  workOrders?: {
    docs?: (number | WorkOrder)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  roles: ('super-admin' | 'service-agent' | 'tenant')[];
  tenants?:
    | {
        tenant: number | Tenant;
        roles: ('tenant-owner' | 'tenant-admin' | 'tenant-manager' | 'tenant-user' | 'tenant-external-user')[];
        id?: string | null;
      }[]
    | null;
  lastLogin?: string | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work-orders".
 */
export interface WorkOrder {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  uploads?: (number | Upload)[] | null;
  estimatedTime?: {
    hours?: number | null;
    minutes?: number | null;
  };
  procedure?:
    | {
        step?: string | null;
        id?: string | null;
      }[]
    | null;
  createdBy?: (number | null) | User;
  assignment?: {
    users?: (number | User)[] | null;
    teams?: (number | null) | Team;
  };
  date: {
    start: string;
    due?: string | null;
  };
  type?: ('reactive' | 'preventive' | 'other') | null;
  recurrence?: {
    type?: ('none' | 'daily' | 'weekly' | 'monthlyByDate' | 'monthlyByWeekday' | 'yearly') | null;
    interval?: number | null;
    details?: {
      daysOfWeek?:
        | {
            day?: ('Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | 'Sunday') | null;
            id?: string | null;
          }[]
        | null;
      dateOfMonth?: number | null;
      weekdayOfMonth?: {
        week?: ('1st' | '2nd' | '3rd' | '4th' | 'last') | null;
        day?: ('Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | 'Sunday') | null;
      };
      monthOfYear?: number | null;
    };
  };
  priority?: ('none' | 'low' | 'medium' | 'high') | null;
  serviceRequest?: (number | null) | ServiceRequest;
  location?: (number | null) | Location;
  asset?: (number | null) | Asset;
  inventories?: (number | Inventory)[] | null;
  vendors?: (number | Vendor)[] | null;
  status?: ('open' | 'onHold' | 'inProgress' | 'done') | null;
  parent?: (number | null) | WorkOrder;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uploads".
 */
export interface Upload {
  id: number;
  tenant?: (number | null) | Tenant;
  createdBy: number | User;
  resource?:
    | ({
        relationTo: 'assets';
        value: number | Asset;
      } | null)
    | ({
        relationTo: 'work-orders';
        value: number | WorkOrder;
      } | null)
    | ({
        relationTo: 'inventories';
        value: number | Inventory;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'service-requests';
        value: number | ServiceRequest;
      } | null);
  type?: ('file' | 'media') | null;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets".
 */
export interface Asset {
  id: number;
  tenant?: (number | null) | Tenant;
  currentStatus?: (number | null) | AssetStatus;
  name: string;
  description?: string | null;
  uploads?: (number | Upload)[] | null;
  manufacturer: string;
  model?: string | null;
  year?: number | null;
  qr?: string | null;
  teams?: (number | Team)[] | null;
  location?: (number | null) | Location;
  inventories?: (number | Inventory)[] | null;
  vendors?: (number | Vendor)[] | null;
  workOrders?: {
    docs?: (number | WorkOrder)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  sensors?: {
    docs?: (number | Sensor)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "asset-statuses".
 */
export interface AssetStatus {
  id: number;
  tenant?: (number | null) | Tenant;
  asset: number | Asset;
  status: 'online' | 'offline' | 'no-tracking';
  downtimeType?: ('planned' | 'unplanned') | null;
  notes?: string | null;
  dateFrom?: string | null;
  dateTo?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  qr?: string | null;
  uploads?: (number | Upload)[] | null;
  inventories?: {
    docs?: (number | Inventory)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  workOrders?: {
    docs?: (number | WorkOrder)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventories".
 */
export interface Inventory {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  stock: number;
  qr?: string | null;
  locations?: (number | Location)[] | null;
  vendors?: (number | Vendor)[] | null;
  uploads?: (number | Upload)[] | null;
  assets?: {
    docs?: (number | Asset)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  workOrders?: {
    docs?: (number | Inventory)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendors".
 */
export interface Vendor {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description: string;
  contacts?: (number | Contact)[] | null;
  assets?: {
    docs?: (number | Asset)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  inventories?: {
    docs?: (number | Inventory)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  workOrders?: {
    docs?: (number | WorkOrder)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts".
 */
export interface Contact {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  position?: string | null;
  email?: string | null;
  phone?: string | null;
  vendors?: {
    docs?: (number | Vendor)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sensors".
 */
export interface Sensor {
  id: number;
  tenant?: (number | null) | Tenant;
  vId?: number | null;
  serial: string;
  mac: string;
  offset?: number | null;
  status: 'provisioned' | 'online' | 'offline' | 'unknown';
  qr?: string | null;
  asset?: (number | null) | Asset;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-requests".
 */
export interface ServiceRequest {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  metaInfo?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  uploads?: (number | Upload)[] | null;
  status?: ('pending' | 'approved' | 'declined' | 'closed') | null;
  workOrder?: {
    docs?: (number | WorkOrder)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-channels".
 */
export interface ServiceChannel {
  id: number;
  tenant?: (number | null) | Tenant;
  vId?: string | null;
  name: string;
  content?: string | null;
  contentPlaceholder?: string | null;
  contactEmail?: string | null;
  customFields?:
    | {
        name: string;
        type?: ('text' | 'textarea' | 'number' | 'date' | 'file' | 'email' | 'url' | 'checkbox') | null;
        id?: string | null;
      }[]
    | null;
  location?: (number | null) | Location;
  asset?: (number | null) | Asset;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "system-events".
 */
export interface SystemEvent {
  id: number;
  tenant?: (number | null) | Tenant;
  userId: number;
  event: 'create' | 'update' | 'delete';
  resourceType:
    | 'assets'
    | 'asset-statuses'
    | 'contacts'
    | 'inventories'
    | 'locations'
    | 'uploads'
    | 'organizations'
    | 'service-channels'
    | 'service-requests'
    | 'teams'
    | 'users'
    | 'vendors'
    | 'work-orders'
    | 'comments'
    | 'sensors';
  resourceId: number;
  changes?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: number;
  tenant?: (number | null) | Tenant;
  text: string;
  author: number | User;
  resource:
    | {
        relationTo: 'assets';
        value: number | Asset;
      }
    | {
        relationTo: 'work-orders';
        value: number | WorkOrder;
      }
    | {
        relationTo: 'inventories';
        value: number | Inventory;
      }
    | {
        relationTo: 'locations';
        value: number | Location;
      }
    | {
        relationTo: 'service-requests';
        value: number | ServiceRequest;
      }
    | {
        relationTo: 'contacts';
        value: number | Contact;
      }
    | {
        relationTo: 'vendors';
        value: number | Vendor;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'organizations';
        value: number | Organization;
      } | null)
    | ({
        relationTo: 'teams';
        value: number | Team;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'contacts';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'vendors';
        value: number | Vendor;
      } | null)
    | ({
        relationTo: 'inventories';
        value: number | Inventory;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'assets';
        value: number | Asset;
      } | null)
    | ({
        relationTo: 'sensors';
        value: number | Sensor;
      } | null)
    | ({
        relationTo: 'asset-statuses';
        value: number | AssetStatus;
      } | null)
    | ({
        relationTo: 'service-channels';
        value: number | ServiceChannel;
      } | null)
    | ({
        relationTo: 'service-requests';
        value: number | ServiceRequest;
      } | null)
    | ({
        relationTo: 'work-orders';
        value: number | WorkOrder;
      } | null)
    | ({
        relationTo: 'system-events';
        value: number | SystemEvent;
      } | null)
    | ({
        relationTo: 'comments';
        value: number | Comment;
      } | null)
    | ({
        relationTo: 'uploads';
        value: number | Upload;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  logo?: T;
  settings?:
    | T
    | {
        timezone?: T;
        language?: T;
        workingDays?: T;
        dateFormat?: T;
        timeFormat?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organizations_select".
 */
export interface OrganizationsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teams_select".
 */
export interface TeamsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  users?: T;
  workOrders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  roles?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  lastLogin?: T;
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts_select".
 */
export interface ContactsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  position?: T;
  email?: T;
  phone?: T;
  vendors?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendors_select".
 */
export interface VendorsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  contacts?: T;
  assets?: T;
  inventories?: T;
  workOrders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventories_select".
 */
export interface InventoriesSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  stock?: T;
  qr?: T;
  locations?: T;
  vendors?: T;
  uploads?: T;
  assets?: T;
  workOrders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  qr?: T;
  uploads?: T;
  inventories?: T;
  workOrders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets_select".
 */
export interface AssetsSelect<T extends boolean = true> {
  tenant?: T;
  currentStatus?: T;
  name?: T;
  description?: T;
  uploads?: T;
  manufacturer?: T;
  model?: T;
  year?: T;
  qr?: T;
  teams?: T;
  location?: T;
  inventories?: T;
  vendors?: T;
  workOrders?: T;
  sensors?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sensors_select".
 */
export interface SensorsSelect<T extends boolean = true> {
  tenant?: T;
  vId?: T;
  serial?: T;
  mac?: T;
  offset?: T;
  status?: T;
  qr?: T;
  asset?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "asset-statuses_select".
 */
export interface AssetStatusesSelect<T extends boolean = true> {
  tenant?: T;
  asset?: T;
  status?: T;
  downtimeType?: T;
  notes?: T;
  dateFrom?: T;
  dateTo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-channels_select".
 */
export interface ServiceChannelsSelect<T extends boolean = true> {
  tenant?: T;
  vId?: T;
  name?: T;
  content?: T;
  contentPlaceholder?: T;
  contactEmail?: T;
  customFields?:
    | T
    | {
        name?: T;
        type?: T;
        id?: T;
      };
  location?: T;
  asset?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-requests_select".
 */
export interface ServiceRequestsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  metaInfo?: T;
  uploads?: T;
  status?: T;
  workOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work-orders_select".
 */
export interface WorkOrdersSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  uploads?: T;
  estimatedTime?:
    | T
    | {
        hours?: T;
        minutes?: T;
      };
  procedure?:
    | T
    | {
        step?: T;
        id?: T;
      };
  createdBy?: T;
  assignment?:
    | T
    | {
        users?: T;
        teams?: T;
      };
  date?:
    | T
    | {
        start?: T;
        due?: T;
      };
  type?: T;
  recurrence?:
    | T
    | {
        type?: T;
        interval?: T;
        details?:
          | T
          | {
              daysOfWeek?:
                | T
                | {
                    day?: T;
                    id?: T;
                  };
              dateOfMonth?: T;
              weekdayOfMonth?:
                | T
                | {
                    week?: T;
                    day?: T;
                  };
              monthOfYear?: T;
            };
      };
  priority?: T;
  serviceRequest?: T;
  location?: T;
  asset?: T;
  inventories?: T;
  vendors?: T;
  status?: T;
  parent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "system-events_select".
 */
export interface SystemEventsSelect<T extends boolean = true> {
  tenant?: T;
  userId?: T;
  event?: T;
  resourceType?: T;
  resourceId?: T;
  changes?: T;
  timestamp?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  tenant?: T;
  text?: T;
  author?: T;
  resource?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uploads_select".
 */
export interface UploadsSelect<T extends boolean = true> {
  tenant?: T;
  createdBy?: T;
  resource?: T;
  type?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}